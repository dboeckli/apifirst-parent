<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>ch.guru.springframework.apifirst</groupId>
    <artifactId>apifirst-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <organization>
        <name>dboeckli</name>
    </organization>

    <modules>
        <module>apifirst-api</module>
        <module>apifirst-server</module>
        <module>apifirst-server-jpa</module>
        <module>apifirst-client</module>
    </modules>

    <properties>
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <repo.name>apifirst-parent</repo.name>

        <google.findbugs.version>3.0.2</google.findbugs.version>
        <jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
        <openapi-generator-maven-plugin.version>7.13.0</openapi-generator-maven-plugin.version>
        <swagger.request.validator.version>2.44.9</swagger.request.validator.version>

        <editorconfig-maven-plugin.version>0.1.3</editorconfig-maven-plugin.version>
        <helm.plugin.version>6.17.0</helm.plugin.version>
        <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>
        <properties-maven-plugin.version>1.2.1</properties-maven-plugin.version>

        <!-- openapi common config -->
        <openapi.inputSpec.location>https://dboeckli.redocly.app/_spec/openapi/openapi.yaml</openapi.inputSpec.location>
        <openapi.generatorName>java</openapi.generatorName>
        <openapi.apiPackage>ch.guru.springframework.apifirst.client</openapi.apiPackage>
        <openapi.modelPackage>ch.guru.springframework.apifirst.model</openapi.modelPackage>
        <openapi.modelNameSuffix>Dto</openapi.modelNameSuffix>
        <openapi.library>resttemplate</openapi.library>
        
        <frontend-maven-plugin.version>1.15.1</frontend-maven-plugin.version>

        <logbook.version>3.12.1</logbook.version>
        <logstash-logback.version>8.1</logstash-logback.version>

        <!-- Sonar -->
        <sonar-maven-plugin.version>5.1.0.4751</sonar-maven-plugin.version>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.language>java</sonar.language>
        <jacoco.version>0.8.13</jacoco.version>

        <!--suppress UnresolvedMavenProperty -->
        <buildNumber>${git.commit.id.abbrev}</buildNumber>
    </properties>

    <scm>
        <connection>scm:git:https://github.com/${project.organization.name}/${repo.name}.git</connection>
        <developerConnection>scm:git:https://github.com/${project.organization.name}/${repo.name}.git</developerConnection>
        <url>https://github.com/${project.organization.name}/${repo.name}.git</url>
        <tag>HEAD</tag>
    </scm>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2</url>
        </repository>
        <repository>
            <!--
            you need a personal access token for the dboeckli organization: generate access token on github: https://github.com/settings/apps
            add gitHub server configuration to settings.xml file with username and password (add token there)
            Configure maven settings of IntelliJ to use your personal settings.xml
            -->
            <id>github</id>
            <url>https://maven.pkg.github.com/${project.organization.name}/${repo.name}</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub dboeckli Apache Maven Packages</name>
            <url>https://maven.pkg.github.com/${project.organization.name}/${repo.name}</url>
        </repository>
    </distributionManagement>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${google.findbugs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openapitools</groupId>
                <artifactId>jackson-databind-nullable</artifactId>
                <version>${jackson-databind-nullable.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addClasspath>true</addClasspath>
                                <classpathPrefix>lib/</classpathPrefix>
                                <!-- Force the use of '-SNAPSHOT' version naming -->
                                <useUniqueVersions>false</useUniqueVersions>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Title>${project.name}</Implementation-Title>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>${project.artifactId}</artifactId>
                                <Implementation-Version>${project.version}</Implementation-Version>
                                <git-SHA-1>${buildNumber}</git-SHA-1>
                                <source-url>${project.scm.url}</source-url>
                                <BuildDate>${maven.build.timestamp}</BuildDate>
                                <Built-By>${user.name}</Built-By>
                                <Build-Jdk>${java.version}</Build-Jdk>
                                <packaging>${project.packaging}</packaging>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.ec4j.maven</groupId>
                <artifactId>editorconfig-maven-plugin</artifactId>
                <version>${editorconfig-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>check-with-editorconfig</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- See http://ec4j.github.io/editorconfig-maven-plugin/ for full configuration reference -->
                    <excludes>
                        <!-- Note that maven submodule directories and many non-source file patterns are excluded by default -->
                        <!-- see https://github.com/ec4j/editorconfig-linters/blob/master/editorconfig-lint-api/src/main/java/org/ec4j/lint/api/Constants.java#L37 -->
                        <!-- You can exclude further files from processing: -->
                        <exclude>**/api-def/dist/**</exclude>
                        <exclude>**/api-def/node_modules/**</exclude>
                        <exclude>**/api-def/package-lock.json</exclude>
                        <exclude>**/toolchains.xml</exclude>
                        <exclude>**/settings.xml</exclude>
                        <exclude>.run/**</exclude>
                        <exclude>.mvn/**</exclude>
                        <exclude>.idea/**</exclude>
                        <exclude>**/banner.txt</exclude>
                        <exclude>mvnw</exclude>
                        <exclude>mvnw.cmd</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <message>This build requires at least Java ${java.version},
                                        update your JVM, and
                                        run the build again</message>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Spring Boot Actuator displays sbom-related information if a CycloneDX SBOM file is
            present at the classpath -->
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
            </plugin>
            
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <append>true</append>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-create-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <formats>
                                <format>XML</format>
                            </formats>
                            <outputDirectory>target/site/jacoco</outputDirectory> <!-- default -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--suppress UnresolvedMavenProperty. argline is set by jacoco -->
                    <argLine>${argLine} -XX:+EnableDynamicAgentLoading -Xshare:off</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <!--suppress UnresolvedMavenProperty. argline is set by jacoco -->
                    <argLine>${argLine} -XX:+EnableDynamicAgentLoading -Xshare:off</argLine>
                </configuration>
            </plugin>
            
            <!--
            this plugin generates some git properties. We use the "git.commit.id.abbrev" variable which we append
            to the docker image id for builds in jenkins (docker.application.image.tag). See "jenkins" profile at the top.
            -->
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                        <phase>initialize</phase>
                    </execution>
                </executions>
                <configuration>
                    <verbose>true</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <commitIdGenerationMode>full</commitIdGenerationMode>
                    <runOnlyOnce>true</runOnlyOnce>
                    <skipPoms>false</skipPoms>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-helm-version</id>
                        <phase>initialize</phase>
                        <configuration>
                            <target>
                                <propertyfile file="${project.build.directory}/helm.properties">
                                    <entry key="helm.chart.version" value="v${project.version}" />
                                </propertyfile>
                                <!--suppress UnresolvedMavenProperty: git.commit.id.abbrev is set by git git-commit-id-maven-plugin -->
                                <replaceregexp file="${project.build.directory}/helm.properties"
                                               match="helm\.chart\.version=(v[0-9]+\.[0-9]+\.[0-9]+)_.*-SNAPSHOT"
                                               replace="helm.chart.version=\1-${git.commit.id.abbrev}"
                                               byline="true" />
                                <property file="${project.build.directory}/helm.properties" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>${properties-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <id>read-helm-properties</id>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${project.build.directory}/helm.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>

